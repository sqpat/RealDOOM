# RealDOOM makefile

# --------------------------------------------------------------------------
#
#      4r  use 80486 timings and register argument passing
#       c  compile only
#      d1  include line number debugging information
#      d2  include full sybolic debugging information
#      ei  force enums to be of type int
#       j  change char default from unsigned to signed
#      oa  relax aliasing checking
#      od  do not optimize
#  oe[=#]  expand functions inline, # = quads (default 20)
#      oi  use the inline library functions
#      om  generate inline 80x87 code for math functions
#      ot  optimize for time
#      ox  maximum optimization
#       s  remove stack overflow checks
#     zp1  align structures on bytes
#      zq  use quiet mode
#  /i=dir  add include directories
#
#      mh huge memory model
#      ml large memory model
#     fpi inline 80x87 instructions with emulation
#      -o optimization: a : relax aliasing constraints
#	   zq operate quietly
#	  zp1 pack structure members with alignment 1
#     zt# set far data threshold (i.e., larger objects go in far memory)
# --------------------------------------------------------------------------


# time optimized seems a LOT faster... ?
# size optimized saves around 10k
CCOPTS2 = -dCODEGEN_SKIP_MENU
 
compileinstructionset = $(USE_ISA)

!ifeq compileinstructionset 1
CCOPTS = -zp1 -oaxet -oi -zq -j -mm -1 -s $(COPT)
!else
!ifeq compileinstructionset 2
CCOPTS = -zp1 -oaxet -oi -zq -j -mm -2 -s $(COPT)
!else
!ifeq compileinstructionset 3
CCOPTS = -zp1 -oaxet -oi -zq -j -mm -2 -s $(COPT)
!else
CCOPTS = -zp1 -oaxet -oi -zq -j -mm -0 -s $(COPT)
!endif
!endif
!endif

GLOBOBJS = &
 m_near.obj &
 codegen.obj


codegen.exe : $(GLOBOBJS)
 wlink @build\codegen.lnk
 wstrip codegen.exe

.c.obj :
 wcc $(CCOPTS) -dCODEGEN_SKIP_MENU $[*

.c : build\tools\codegen\

.asm.obj :
 tasm /mx /m2 /w2 /q /zi $(ASMOPTS) $[*

clean : .SYMBOLIC
 del m_near.obj
 del codegen.obj
 del *.err
 