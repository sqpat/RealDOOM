; Copyright (C) 1993-1996 Id Software, Inc.
; Copyright (C) 1993-2008 Raven Software
; Copyright (C) 2016-2017 Alexey Khokholov (Nuke.YKT)
;
; This program is free software; you can redistribute it and/or
; modify it under the terms of the GNU General Public License
; as published by the Free Software Foundation; either version 2
; of the License, or (at your option) any later version.
;
; This program is distributed in the hope that it will be useful,
; but WITHOUT ANY WARRANTY; without even the implied warranty of
; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
; GNU General Public License for more details.
;
; DESCRIPTION:
;
INCLUDE defs.inc

INSTRUCTION_SET_MACRO
	.MODEL  medium


SEGMENT _FIXEDDATA  USE16 PARA PUBLIC 'DATA'
; 000   _segloopnextlookup 00
dw  -1, -1, 00, 00, 00, 00, 00, 00




; 010  
dw  00, 00, 00, 00, 00, 00, 00, 00
dw  00, 00, 00, 00, 00, 00, 00, 00
; _quality_port_lookup 0x30
db 1,  2,  4,  8,  3, 12,  3, 12, 15, 15, 15, 15
dw                                       00, 00



;0x40    48: jump_mult_table_3 
db 0,  0,  0,  0,  0,  0,  0, 0, 19, 18, 15, 12,  9,  6,  3, 0
;0x50   0x54 = _planezlight (dword, so segment in 56)	 0x58 caststate (0x5A is STATES_SEGMENT) 
dw 0,  0,  0,  ZLIGHT_SEGMENT,  0,  STATES_SEGMENT,  0,  0
;0x60
dw 0, 0, 0, 0, 0, 0, 0, 0
;0x70  7E = screen_segments
dw 00, 00, 00, 00, 00, 00, 00, 8000h
; 0x80
dw 8000h,  7000h,  6000h,  9C00h,    00, 00,     00,    00
; 0x90
dw 0, 0, 0, 0, 0, 0, 0, 0
;0xA0
dw 0, 0, 0, 0, 0, 0, 0, 0
;0xB0
dw 0, 0, 0, 0, 0, 0, 0, 0
; _mfloorclip segment = c2, _mceilingclip segment = c6
; 0xC0
dw 0,  OPENINGS_SEGMENT,  0,  OPENINGS_SEGMENT,  0,  0,  0,  0
; 0xD0
; _ds_source_segment  0xD8 
dw 00, 00, 00, 00, DRAWSPAN_BX_OFFSET, 00, 00, 00
; 0xE0    spanfunc_segment_storage EAh
dw 0, 0, 0, 0, 0, SPANFUNC_JUMP_LOOKUP_SEGMENT, 0, 0


; 0xF0   validcount (0xF4)= 1
dw 0, 0, 1, 0, 0, 0, 0, 0
; 0x100:
;  unused   0x0100
; _viewangle_shiftright3 0x104
; _dc_source_segment  0x10A
dw 00, 00, 00h, XTOVIEWANGLE_SEGMENT,  004Fh, 00h, 00h, DC_YL_LOOKUP_SEGMENT
dw 00, CACHEDHEIGHT_SEGMENT, DISTSCALE_SEGMENT, CACHEDDISTANCE_SEGMENT, CACHEDXSTEP_SEGMENT, CACHEDYSTEP_SEGMENT, 0, 0
; todo unused
; 0x120
dw 00, 00h, 00h, 00h
; MULT_4096 0x128
dw 00, 01000h, 02000h, 03000h
; FLAT_CACHE_PAGE 0x130
; todo unused
dw  00, 00, 00, 00
; visplanelookupsegments  0x138
dw 08400h, 08800h, 08C00h
; firstflat 0x13E
dw 00h

; 0x140
dw  00, 00, 00, 00, 00, 00, 00, 00
; 0x150
dw  00, 00, 00, 00, 00, 00, 00, 00

; 0x160
; currentflatpage 0x160, lastflatcacheindicesused 0x164
db 0, 1, 2, 3, 0, 1, 2, 3
; 0x168
dw  00, 00, 00, 00
; 0x170 
dw  00, 00, 00, 00, 00, 00, 00, 00
; 0x180
dw  00, 00, 00, 00, 00, 00, 00, 00
; 0x190
dw  00, 00, 00, 00, 00, 00, 00, 00
; 0x1A0  _frontsector backsector 1a4 1a8, set their segments


dw  00, 00, 00, SECTORS_SEGMENT, 00, SECTORS_SEGMENT, 00, 00
; 0x1B0
; _active_visplanes[5]... one byte free
db  1, 2, 3, 0, 0
; 0x1B5 wipegamestate
db  GS_DEMOSCREEN
; 0x1B6  _visplane_offset[25]
dw 	0, 646 ,1292, 1938, 2584
dw	3230,  3876, 4522, 5168, 5814 
dw	6460,  7106, 7752, 8398, 9044
dw	9690,  10336, 10982, 11628, 12274 
dw	12920,  13566, 14212, 14858, 15504
; 1E8 dirtybox
dw  00, 00, 00, 00
; 1F0 ticcount...
dw  00, 00, 00, 00, 00, 00, 00, 00
dw  00, 00, 00, 00, 00, 00, 00, 00
dw  00, 00, 00, 00

; 218
; 
dw 0FFFFh, MASKEDPIXELDATAOFS_SEGMENT

; 21C
; _maskedtexturecol and its segment
dw 00, OPENINGS_SEGMENT
; 220 masked_headers 12 * 8 bytes
dw  00, 00, 00, 00, 00, 00, 00, 00
dw  00, 00, 00, 00, 00, 00, 00, 00
dw  00, 00, 00, 00, 00, 00, 00, 00
dw  00, 00, 00, 00, 00, 00, 00, 00
dw  00, 00, 00, 00, 00, 00, 00, 00
dw  00, 00, 00, 00, 00, 00, 00, 00
; 280
dw  00, 00, 00, 00, 00, NULL_TEX_COL, 00, NULL_TEX_COL
dw  00, 00, 0FFFFh, 0FFFFh, 0FFFFh, 0FFFFh, 00, DRAWSEGS_BASE_SEGMENT
; 2A0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 2B0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 2C0
dw  00, 00, 00, 00, 00, 00, 00, 00


;#colfunc_call_table 2D0 (300 with null offset added )
;300 (null offset + 2D0)
; colormaps settings...
dw DRAWCOL_OFFSET - 00000h,  COLORMAPS_SEGMENT + 0000h
dw DRAWCOL_OFFSET - 00100h,  COLORMAPS_SEGMENT + 0010h
dw DRAWCOL_OFFSET - 00200h,  COLORMAPS_SEGMENT + 0020h
dw DRAWCOL_OFFSET - 00300h,  COLORMAPS_SEGMENT + 0030h
dw DRAWCOL_OFFSET - 00400h,  COLORMAPS_SEGMENT + 0040h
dw DRAWCOL_OFFSET - 00500h,  COLORMAPS_SEGMENT + 0050h
dw DRAWCOL_OFFSET - 00600h,  COLORMAPS_SEGMENT + 0060h
dw DRAWCOL_OFFSET - 00700h,  COLORMAPS_SEGMENT + 0070h
dw DRAWCOL_OFFSET - 00800h,  COLORMAPS_SEGMENT + 0080h
dw DRAWCOL_OFFSET - 00900h,  COLORMAPS_SEGMENT + 0090h
dw DRAWCOL_OFFSET - 00A00h,  COLORMAPS_SEGMENT + 00A0h
dw DRAWCOL_OFFSET - 00B00h,  COLORMAPS_SEGMENT + 00B0h
dw DRAWCOL_OFFSET - 00C00h,  COLORMAPS_SEGMENT + 00C0h
dw DRAWCOL_OFFSET - 00D00h,  COLORMAPS_SEGMENT + 00D0h
dw DRAWCOL_OFFSET - 00E00h,  COLORMAPS_SEGMENT + 00E0h
dw DRAWCOL_OFFSET - 00F00h,  COLORMAPS_SEGMENT + 00F0h
dw DRAWCOL_OFFSET - 01000h,  COLORMAPS_SEGMENT + 0100h
dw DRAWCOL_OFFSET - 01100h,  COLORMAPS_SEGMENT + 0110h
dw DRAWCOL_OFFSET - 01200h,  COLORMAPS_SEGMENT + 0120h
dw DRAWCOL_OFFSET - 01300h,  COLORMAPS_SEGMENT + 0130h
dw DRAWCOL_OFFSET - 01400h,  COLORMAPS_SEGMENT + 0140h
dw DRAWCOL_OFFSET - 01500h,  COLORMAPS_SEGMENT + 0150h
dw DRAWCOL_OFFSET - 01600h,  COLORMAPS_SEGMENT + 0160h
dw DRAWCOL_OFFSET - 01700h,  COLORMAPS_SEGMENT + 0170h
dw DRAWCOL_OFFSET - 01800h,  COLORMAPS_SEGMENT + 0180h
dw DRAWCOL_OFFSET - 01900h,  COLORMAPS_SEGMENT + 0190h
dw DRAWCOL_OFFSET - 01A00h,  COLORMAPS_SEGMENT + 01A0h
dw DRAWCOL_OFFSET - 01B00h,  COLORMAPS_SEGMENT + 01B0h
dw DRAWCOL_OFFSET - 01C00h,  COLORMAPS_SEGMENT + 01C0h
dw DRAWCOL_OFFSET - 01D00h,  COLORMAPS_SEGMENT + 01D0h
dw DRAWCOL_OFFSET - 01E00h,  COLORMAPS_SEGMENT + 01E0h
dw DRAWCOL_OFFSET - 01F00h,  COLORMAPS_SEGMENT + 01F0h
dw DRAWCOL_OFFSET - 02000h,  COLORMAPS_SEGMENT + 0200h

; 354
dw         00, 00, 00, 00, 00, 00
; 360
dw  00, 00, 00, 00, 00, 00, 00, 00
; 370 _vga_read_port_lookup
dw   4, 260, 516, 772,  4, 516, 4, 516
dw 	 4, 4, 4, 4, 		0, 0, 0, 0




; 390  _savedescription
dw  00, 00, 00, 00, 00, 00, 00, 00
; 3A0  _savedescription
dw  00, 00, 00, 00, 00, 00, 00, 00
; 3B0  demoname
dw  00, 00, 00, 00, 00, 00, 00, 00
; 3C0  demoname
dw  00, 00, 00, 00, 00, 00, 00, 00

;400 (null offset + 3D0)
; masked colormaps settings...
dw DRAWCOL_OFFSET - 00000h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0000h
dw DRAWCOL_OFFSET - 00100h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0010h
dw DRAWCOL_OFFSET - 00200h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0020h
dw DRAWCOL_OFFSET - 00300h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0030h
dw DRAWCOL_OFFSET - 00400h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0040h
dw DRAWCOL_OFFSET - 00500h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0050h
dw DRAWCOL_OFFSET - 00600h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0060h
dw DRAWCOL_OFFSET - 00700h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0070h
dw DRAWCOL_OFFSET - 00800h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0080h
dw DRAWCOL_OFFSET - 00900h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0090h
dw DRAWCOL_OFFSET - 00A00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 00A0h
dw DRAWCOL_OFFSET - 00B00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 00B0h
dw DRAWCOL_OFFSET - 00C00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 00C0h
dw DRAWCOL_OFFSET - 00D00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 00D0h
dw DRAWCOL_OFFSET - 00E00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 00E0h
dw DRAWCOL_OFFSET - 00F00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 00F0h
dw DRAWCOL_OFFSET - 01000h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0100h
dw DRAWCOL_OFFSET - 01100h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0110h
dw DRAWCOL_OFFSET - 01200h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0120h
dw DRAWCOL_OFFSET - 01300h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0130h
dw DRAWCOL_OFFSET - 01400h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0140h
dw DRAWCOL_OFFSET - 01500h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0150h
dw DRAWCOL_OFFSET - 01600h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0160h
dw DRAWCOL_OFFSET - 01700h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0170h
dw DRAWCOL_OFFSET - 01800h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0180h
dw DRAWCOL_OFFSET - 01900h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0190h
dw DRAWCOL_OFFSET - 01A00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 01A0h
dw DRAWCOL_OFFSET - 01B00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 01B0h
dw DRAWCOL_OFFSET - 01C00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 01C0h
dw DRAWCOL_OFFSET - 01D00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 01D0h
dw DRAWCOL_OFFSET - 01E00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 01E0h
dw DRAWCOL_OFFSET - 01F00h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 01F0h
dw DRAWCOL_OFFSET - 02000h,  COLORMAPS_SEGMENT_MASKEDMAPPING + 0200h

; 454 ems_backfill_page_order[24] 
db         0, 1, 2, 3, -4, -3, -2, -1, -8, -7, -6, -5 
; 460
db -12, -11, -10, -9, -16, -15, -14, -13, -20, -19, -18, -17
; 46C
dw  00, 00

; 470 ; movedirangles[8]
dw  00000h, 02000h, 04000h, 06000h, 08000h, 0A000h, 0C000h, 0E000h

; 480 braintargets[32]
dw  00, 00, 00, 00, 00, 00, 00, 00
; 490 braintargets
dw  00, 00, 00, 00, 00, 00, 00, 00
; 4A0 braintargets
dw  00, 00, 00, 00, 00, 00, 00, 00
; 4B0 braintargets
dw  00, 00, 00, 00, 00, 00, 00, 00
; 4C0
dw  00, 00, 00, 00, 00, 00, 00, 00

; diff between R_DrawSpanActual_ and R_DrawSpan_ label. E9 jmp rel16
; 0A0h is size of span jump table. 3 is size of diff mentioned in above line
R_DRAWSPANACTUAL_DIFF = 3 + 0A0h

;500 (null offset + 4D0) spanfunc_call_table
; drawspan settings...
   
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00000h,  (COLORMAPS_SEGMENT - 0FCh) + 0000h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00100h,  (COLORMAPS_SEGMENT - 0FCh) + 0010h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00200h,  (COLORMAPS_SEGMENT - 0FCh) + 0020h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00300h,  (COLORMAPS_SEGMENT - 0FCh) + 0030h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00400h,  (COLORMAPS_SEGMENT - 0FCh) + 0040h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00500h,  (COLORMAPS_SEGMENT - 0FCh) + 0050h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00600h,  (COLORMAPS_SEGMENT - 0FCh) + 0060h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00700h,  (COLORMAPS_SEGMENT - 0FCh) + 0070h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00800h,  (COLORMAPS_SEGMENT - 0FCh) + 0080h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00900h,  (COLORMAPS_SEGMENT - 0FCh) + 0090h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00A00h,  (COLORMAPS_SEGMENT - 0FCh) + 00A0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00B00h,  (COLORMAPS_SEGMENT - 0FCh) + 00B0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00C00h,  (COLORMAPS_SEGMENT - 0FCh) + 00C0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00D00h,  (COLORMAPS_SEGMENT - 0FCh) + 00D0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00E00h,  (COLORMAPS_SEGMENT - 0FCh) + 00E0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 00F00h,  (COLORMAPS_SEGMENT - 0FCh) + 00F0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01000h,  (COLORMAPS_SEGMENT - 0FCh) + 0100h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01100h,  (COLORMAPS_SEGMENT - 0FCh) + 0110h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01200h,  (COLORMAPS_SEGMENT - 0FCh) + 0120h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01300h,  (COLORMAPS_SEGMENT - 0FCh) + 0130h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01400h,  (COLORMAPS_SEGMENT - 0FCh) + 0140h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01500h,  (COLORMAPS_SEGMENT - 0FCh) + 0150h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01600h,  (COLORMAPS_SEGMENT - 0FCh) + 0160h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01700h,  (COLORMAPS_SEGMENT - 0FCh) + 0170h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01800h,  (COLORMAPS_SEGMENT - 0FCh) + 0180h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01900h,  (COLORMAPS_SEGMENT - 0FCh) + 0190h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01A00h,  (COLORMAPS_SEGMENT - 0FCh) + 01A0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01B00h,  (COLORMAPS_SEGMENT - 0FCh) + 01B0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01C00h,  (COLORMAPS_SEGMENT - 0FCh) + 01C0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01D00h,  (COLORMAPS_SEGMENT - 0FCh) + 01D0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01E00h,  (COLORMAPS_SEGMENT - 0FCh) + 01E0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 01F00h,  (COLORMAPS_SEGMENT - 0FCh) + 01F0h
dw (DRAWSPAN_CALL_OFFSET + R_DRAWSPANACTUAL_DIFF) - 02000h,  (COLORMAPS_SEGMENT - 0FCh) + 0200h

; 554
dw         0, 0, 0, 0, 0, 0
; 560
dw  00, 00, 00, 00, 00, 00, 00, 00
; 570
dw  00, 00, 00, 00, 00, 00, 00, 00
; 580
dw  00, 00, 00, 00, 00, 00, 00, 00
; 590
dw  00, 00, 00, 00, 00
; 59A
db "r", 0, "w", "0"
; 59E
dw 0
; 5A0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 5B0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 5C0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 5D0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 5E0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 5F0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 600
dw  00, 00, 00, 00, 00, 00, 00, 00
; 610
dw  00, 00, 00, 00, 00, 00, 00, 00
; 620
dw  00, 00, 00, 00, 00, 00, 00, 00
; 630
dw  00, 00, 00, 00, 00, 00, 00, 00
; 640	; 648 is sfx_free_bytes. give it 40 pages just in case for 4 MB build..
dw  00, 00, 00, 00, 00, 00, 00, 00
; 650
dw  00, 00, 00, 00, 00, 00, 00, 00
; 660
dw  00, 00, 00, 00, 00, 00, 00, 00
; 670
dw  00, 00, 00, 00, 00, 00, -1, -1
; 680
dw  00, 00, 00, 00, 00, 00, 00, 00
; 690
dw  00, 00, 00, 00, 00, 00, 00, 00
; 6A0
dw  00, 00, 00, 00, -1, -1, 0
db 0, NUM_FLAT_CACHE_PAGES-1
; 6B0
dw  00, 00, 00, 00, -1, -1, 00, 00
; 6C0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 6D0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 6E0
dw  00, 00, 00, 00, 00, 00, 00, 00
; 6F0
db "r", "b", "0"
; 6F3 currenttask
db -1
; 6F4
dw          00, 00, 00, 00, 00, 00

; 700
REPT NUM_FLAT_CACHE_PAGES
	dw  00
ENDM

REPT NUM_SPRITE_CACHE_PAGES
	dw  00, 00
ENDM

REPT NUM_TEXTURE_PAGES
	dw  00, 00
ENDM

REPT NUM_FLAT_CACHE_PAGES
	db  00
ENDM

REPT NUM_SPRITE_CACHE_PAGES
	db  00
ENDM

REPT NUM_TEXTURE_PAGES
	db  00
ENDM


	; physics
	_NPR PAGE_4000_OFFSET		 			 		PAGE_4000_OFFSET
	_NPR PAGE_4400_OFFSET		 			 		PAGE_4400_OFFSET 
	_NPR PAGE_4800_OFFSET		 			 		PAGE_4800_OFFSET 
	_NPR PAGE_4C00_OFFSET		 			 		PAGE_4C00_OFFSET
	_NPR PAGE_5000_OFFSET 		 			 		PAGE_5000_OFFSET
	_NPR PAGE_5400_OFFSET		 			 		PAGE_5400_OFFSET
	_NPR PAGE_5800_OFFSET		 			 		PAGE_5800_OFFSET
	_NPR PAGE_5C00_OFFSET		 			 		PAGE_5C00_OFFSET
	_NPR PAGE_6000_OFFSET	 			 		 	PAGE_6000_OFFSET
	_NPR PAGE_6400_OFFSET							PAGE_6400_OFFSET
	_EPR 13		 			 		            	PAGE_6800_OFFSET
	_EPR 14 	 				    	 			PAGE_6C00_OFFSET

	_NPR PAGE_7000_OFFSET				 			PAGE_7000_OFFSET
	_NPR PAGE_7400_OFFSET	 						PAGE_7400_OFFSET
	_NPR PAGE_7800_OFFSET				 			PAGE_7800_OFFSET 
	_NPR PAGE_7C00_OFFSET	 						PAGE_7C00_OFFSET

	_NPR PAGE_8000_OFFSET					 		PAGE_8000_OFFSET
	_NPR PAGE_8400_OFFSET					 		PAGE_8400_OFFSET
	_NPR PAGE_8800_OFFSET					 		PAGE_8800_OFFSET
	_NPR PAGE_8C00_OFFSET		 					PAGE_8C00_OFFSET
	_EPR 15 		 								PAGE_9000_OFFSET ; segs physics
	_EPR FIRST_LUMPINFO_LOGICAL_PAGE    	 		PAGE_9400_OFFSET
	_EPR FIRST_LUMPINFO_LOGICAL_PAGE+1 		 		PAGE_9800_OFFSET
	_EPR FIRST_LUMPINFO_LOGICAL_PAGE+2 		 		PAGE_9C00_OFFSET
		; render
	_EPR 0		 									PAGE_4000_OFFSET
	_EPR 1					 						PAGE_4400_OFFSET
	_EPR 2								 			PAGE_4800_OFFSET
	_EPR 3									 		PAGE_4C00_OFFSET

	_EPR FIRST_TEXTURE_LOGICAL_PAGE+0		 		PAGE_5000_OFFSET
	_EPR FIRST_TEXTURE_LOGICAL_PAGE+1		 		PAGE_5400_OFFSET
	_EPR FIRST_TEXTURE_LOGICAL_PAGE+2		 		PAGE_5800_OFFSET
	_EPR FIRST_TEXTURE_LOGICAL_PAGE+3		 		PAGE_5C00_OFFSET
	; texture cache area
	_EPR FIRST_TEXTURE_LOGICAL_PAGE+4		 		PAGE_6000_OFFSET
	_EPR FIRST_TEXTURE_LOGICAL_PAGE+5		 		PAGE_6400_OFFSET
	_EPR FIRST_TEXTURE_LOGICAL_PAGE+6		 		PAGE_6800_OFFSET
	_EPR FIRST_TEXTURE_LOGICAL_PAGE+7		 		PAGE_6C00_OFFSET  ; texture cache area
	_EPR 7									 		PAGE_7000_OFFSET
	_EPR 8								 			PAGE_7400_OFFSET
	_EPR 9					 						PAGE_7800_OFFSET
	_EPR 10		 									PAGE_7C00_OFFSET

	_EPR 4									 		PAGE_8000_OFFSET
	_EPR 5						 					PAGE_8400_OFFSET
	_EPR 6			 								PAGE_8800_OFFSET
	_EPR EMS_VISPLANE_EXTRA_PAGE			 		PAGE_8C00_OFFSET
		; this 9000 unused; todo: move 6000-8000 to 7000-9000
		; todo are all these used...?
	_EPR 11 					 					PAGE_9000_OFFSET
	_EPR 12 				 						PAGE_9400_OFFSET
	_EPR 13 					 					PAGE_9800_OFFSET
	_EPR 14 				 						PAGE_9C00_OFFSET
		; render 4000 to 9000
	_EPR 0					 						PAGE_9000_OFFSET
	_EPR 1					 						PAGE_9400_OFFSET 
	_EPR 2					 						PAGE_9800_OFFSET 
	_EPR 3				 							PAGE_9C00_OFFSET	
		; status/hud
	_NPR PAGE_9C00_OFFSET 			 				PAGE_9C00_OFFSET ;SCREEN4_LOGICAL_PAGE
	_EPR FIRST_STATUS_LOGICAL_PAGE+0 	 			PAGE_7000_OFFSET
	_EPR FIRST_STATUS_LOGICAL_PAGE+1 	 			PAGE_7400_OFFSET
	_EPR FIRST_STATUS_LOGICAL_PAGE+2 	 			PAGE_7800_OFFSET
	_EPR FIRST_STATUS_LOGICAL_PAGE+3 	 			PAGE_7C00_OFFSET
	_NPR PAGE_6000_OFFSET 		 		 			PAGE_6000_OFFSET ; STRINGS_LOGICAL_PAGE
		; demo
	_EPR FIRST_DEMO_LOGICAL_PAGE+0 		 			PAGE_5000_OFFSET
	_EPR FIRST_DEMO_LOGICAL_PAGE+1 		 			PAGE_5400_OFFSET
	_EPR FIRST_DEMO_LOGICAL_PAGE+2 	 				PAGE_5800_OFFSET
	_EPR FIRST_DEMO_LOGICAL_PAGE+3 		 			PAGE_5C00_OFFSET
	; we use 0x5000 as a  'scratch' page frame for certain things
	; scratch 5000
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+0 		 		PAGE_5000_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+1 		 		PAGE_5400_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+2 		 		PAGE_5800_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+3 		 		PAGE_5C00_OFFSET
	; but sometimes we need that in the 0x8000 segment..
	; scratch 8000
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+0 				PAGE_8000_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+1 				PAGE_8400_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+2 				PAGE_8800_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+3		 		PAGE_8C00_OFFSET
			; and sometimes we need that in the 0x7000 segment..
		; scratch 7000
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+0 				PAGE_7000_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+1 				PAGE_7400_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+2 				PAGE_7800_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+3 				PAGE_7C00_OFFSET
			; and sometimes we need that in the 0x4000 segment..
		; scratch 4000
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+0 				PAGE_4000_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+1 				PAGE_4400_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+2 				PAGE_4800_OFFSET
	_EPR FIRST_SCRATCH_LOGICAL_PAGE+3 				PAGE_4C00_OFFSET

		; puts sky_texture in the right place adjacent to flat cache for planes
		;  RenderPlane
	_EPR FLAT_DATA_PAGES 							PAGE_5000_OFFSET
	_EPR FLAT_DATA_PAGES+1 							PAGE_5400_OFFSET
	_EPR FLAT_DATA_PAGES+2 							PAGE_5800_OFFSET
	_EPR PALETTE_LOGICAL_PAGE 						PAGE_9C00_OFFSET      ; SPAN CODE SHOVED IN HERE. used to be mobjposlist but thats unused during planes														
		; flat cache
	_EPR FIRST_FLAT_CACHE_LOGICAL_PAGE+0 			PAGE_7000_OFFSET
	_EPR FIRST_FLAT_CACHE_LOGICAL_PAGE+1 			PAGE_7400_OFFSET
	_EPR FIRST_FLAT_CACHE_LOGICAL_PAGE+2 			PAGE_7800_OFFSET
	_EPR FIRST_FLAT_CACHE_LOGICAL_PAGE+3 			PAGE_7C00_OFFSET
		; flat cache undo   NOTE: we just call it with seven params to set everything up for sprites
		; sprite cache
	_EPR FIRST_SPRITE_CACHE_LOGICAL_PAGE+0 			PAGE_9000_OFFSET
	_EPR FIRST_SPRITE_CACHE_LOGICAL_PAGE+1 			PAGE_9400_OFFSET
	_EPR FIRST_SPRITE_CACHE_LOGICAL_PAGE+2 			PAGE_9800_OFFSET
	_EPR FIRST_SPRITE_CACHE_LOGICAL_PAGE+3 			PAGE_9C00_OFFSET
	_EPR 11 										PAGE_7000_OFFSET
	_EPR 12 										PAGE_7400_OFFSET
	_EPR RENDER_7800_PAGE 							PAGE_7800_OFFSET
	_EPR RENDER_7C00_PAGE 							PAGE_7C00_OFFSET
		;masked
	_EPR FIRST_EXTRA_MASKED_DATA_PAGE		 		PAGE_8400_OFFSET
	_EPR FIRST_EXTRA_MASKED_DATA_PAGE+1 			PAGE_8800_OFFSET
	_EPR PHYSICS_RENDER_9800_PAGE PAGE_8C00_OFFSET  ; put colormaps where vissprites used to be?
		;render 9000 to 6000
	_EPR 11 										PAGE_6000_OFFSET
	_EPR 12 										PAGE_6400_OFFSET
		; palette
	_NPR PAGE_8000_OFFSET 							PAGE_8000_OFFSET
	_NPR PAGE_8400_OFFSET 							PAGE_8400_OFFSET
	_NPR PAGE_8800_OFFSET 							PAGE_8800_OFFSET
	_NPR PAGE_8C00_OFFSET 							PAGE_8C00_OFFSET ; SCREEN0_LOGICAL_PAGE
	_EPR PALETTE_LOGICAL_PAGE 						PAGE_9000_OFFSET
	; menu 
	_NPR PAGE_5000_OFFSET 							PAGE_5000_OFFSET
	_NPR PAGE_5400_OFFSET 							PAGE_5400_OFFSET
	_NPR PAGE_5800_OFFSET 							PAGE_5800_OFFSET
	_EPR FIRST_MENU_GRAPHICS_LOGICAL_PAGE+0 		PAGE_5C00_OFFSET
	_NPR PAGE_6000_OFFSET 				    		PAGE_6000_OFFSET  ; STRINGS_LOGICAL_PAGE
	_EPR FIRST_MENU_GRAPHICS_LOGICAL_PAGE+1 		PAGE_6400_OFFSET
	_NPR PAGE_6800_OFFSET  				    		PAGE_6800_OFFSET
	_NPR PAGE_6C00_OFFSET				    		PAGE_6C00_OFFSET
	; intermission 
	_EPR FIRST_INTERMISSION_GRAPHICS_LOGICAL_PAGE+4 PAGE_6000_OFFSET
	_EPR FIRST_INTERMISSION_GRAPHICS_LOGICAL_PAGE+5 PAGE_6400_OFFSET
	_EPR FIRST_INTERMISSION_GRAPHICS_LOGICAL_PAGE+6 PAGE_6800_OFFSET
	_EPR FIRST_INTERMISSION_GRAPHICS_LOGICAL_PAGE+7 PAGE_6C00_OFFSET
	_EPR FIRST_INTERMISSION_GRAPHICS_LOGICAL_PAGE+0 PAGE_7000_OFFSET
	_EPR FIRST_INTERMISSION_GRAPHICS_LOGICAL_PAGE+1 PAGE_7400_OFFSET
	_EPR FIRST_INTERMISSION_GRAPHICS_LOGICAL_PAGE+2 PAGE_7800_OFFSET
	_EPR FIRST_INTERMISSION_GRAPHICS_LOGICAL_PAGE+3 PAGE_7C00_OFFSET
	; wipe/intermission shared pages
	_NPR PAGE_8000_OFFSET 							PAGE_8000_OFFSET ; SCREEN0_LOGICAL_PAGE
	_NPR PAGE_8400_OFFSET 							PAGE_8400_OFFSET
	_NPR PAGE_8800_OFFSET 							PAGE_8800_OFFSET
	_NPR PAGE_8C00_OFFSET 							PAGE_8C00_OFFSET ; also has rndtable
		; wipe start
	_EPR SCREEN1_LOGICAL_PAGE+0 					PAGE_9000_OFFSET
	_EPR SCREEN1_LOGICAL_PAGE+1 					PAGE_9400_OFFSET
	_EPR SCREEN1_LOGICAL_PAGE+2 					PAGE_9800_OFFSET
	_EPR SCREEN1_LOGICAL_PAGE+3 					PAGE_9C00_OFFSET
	_EPR SCREEN3_LOGICAL_PAGE+0 					PAGE_6000_OFFSET
	_EPR SCREEN3_LOGICAL_PAGE+1 					PAGE_6400_OFFSET ; shared with visplanes. TODO: this works because no level starting screen ever goes beyond 50 visplanes. However savegames might be problematic...
	_EPR SCREEN3_LOGICAL_PAGE+2 					PAGE_6800_OFFSET ; shared with visplanes
	_EPR SCREEN3_LOGICAL_PAGE+3 					PAGE_6C00_OFFSET ; shared with visplanes
	_EPR SCREEN2_LOGICAL_PAGE+0 					PAGE_7000_OFFSET
	_EPR SCREEN2_LOGICAL_PAGE+1 					PAGE_7400_OFFSET
	_EPR SCREEN2_LOGICAL_PAGE+2 					PAGE_7800_OFFSET
	_EPR SCREEN2_LOGICAL_PAGE+3 					PAGE_7C00_OFFSET 	; fwipe_ycolumns_segment here fwipe_mul160lookup_segment too
		;_EPR FIRST_WIPE_LOGICAL_PAGE 				PAGE_9000_OFFSET
	_EPR EMS_VISPLANE_EXTRA_PAGE 				    PAGE_8400_OFFSET
	_NPR PAGE_9400_OFFSET 							PAGE_9400_OFFSET
	_NPR PAGE_9800_OFFSET 							PAGE_9800_OFFSET


ENDS _FIXEDDATA

GROUP DGROUP _FIXEDDATA



END